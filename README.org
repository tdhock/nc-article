** Paper

Title: Regular expressions and reshaping using data tables and the
  [[https://github.com/tdhock/nc][nc]] package

Abstract: Regular expressions are powerful tools for extracting tables
  from non-tabular text data. Capturing regular expressions that
  describe information to extract from column names can be especially
  useful when reshaping a data table from wide (one row with many
  columns) to tall (one column with many rows). We present the R
  package nc (short for named capture), which provides functions for
  data reshaping, regular expressions, and a uniform interface to
  three C libraries (PCRE, RE2, ICU). We describe the main features of
  nc, then provide detailed comparisons with related R packages
  (stats, utils, data.table, tidyr, reshape2, cdata).

- Output [[file:RJwrapper.pdf]]  
- Main input/source file to edit is [[file:hocking.Rnw]] 
- [[file:Makefile]] takes care of creating [[file:submission.zip]]

** 5 Oct 2020

[[file:figure-who-cols-dt-data.R]] computes timings,
[[file:figure-who-cols-dt.R]] plots

[[file:figure-who-cols-dt.png]]

[[file:figure-iris-cols-dt-valgrind.R]] run under valgrind, no memory
problems.

[[file:figure-iris-cols-dt-data.R]] computes timings of new data table
methods, [[file:figure-iris-cols-dt.R]] makes

[[file:figure-iris-cols-dt.png]]

** 17 May 2020

maybe add comparison with [[https://github.com/TysonStanley/tidyfast/blob/master/R/pivot_longer.R][tidyfast::dt_pivot_longer]]?

** 29 Oct 2019
[[file:figure-iris-cols-new.R]] makes a new figure based on [[file:figure-iris-cols-new-data.R][timings]]
computed using updated R packages.

[[file:figure-iris-cols-new.png]]

** 28 Oct 2019

[[file:figure-iris-cols.R]] makes a figure, 
based on data computed by [[file:figure-iris-cols-data.R]],
which shows that wide-to-tall data
reshaping using either data.table or nc packages is much faster than
other packages (cdata, stats, tidyr). This experiment uses inputs with
a fixed number of rows, and a variable number of input reshape
columns. Each function in the experiment outputs a table with multiple
(2) reshape columns. It shows that the quadratic time complexity of
cdata, stats, tidyr results in significant slowdowns when there are at
least 10,000 input reshape columns.

[[file:figure-iris-cols.png]]

In contrast everything below appears to be linear in the number of input
columns when the output has only a single reshape column:

[[file:figure-who-cols-minimal.png]]

source: [[file:figure-who-cols-minimal.R][figure]], [[file:figure-who-cols-minimal-data.R][timings]].

Note that stats::reshape is missing in the second plot here, but the result for a smaller N.col size can be seen here https://github.com/tdhock/nc-article/blob/master/figure-who-cols.png

** 25 Oct 2019

[[file:figure-who-both-rows.R]] makes

[[file:figure-who-both-rows.png]]

** 24 Oct 2019

[[file:figure-who-complex-rows.R]] makes

[[file:figure-who-complex-rows.png]]

** 23 Oct 2019

[[file:figure-who-rows.R]] makes

[[file:figure-who-rows.png]]

[[file:figure-who-cols.R]] makes

[[file:figure-who-cols.png]]
